name: CI

on:
  push:
    branches:
      - master
      - maint-2.x
  pull_request:
    branches:
      - master
      - maint-2.x
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 3 * * 6'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  Tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
          # You can add/remove combinations e.g. `dev` requirements or `postgresql13` by adding
          # a new item to the following lists.
          # You can see the complete list of services and versions that are available at:
          # https://docker-services-cli.readthedocs.io/en/latest/configuration.html
          python-version: [3.6, 3.7, 3.8]
          requirements-level: [pypi]
          cache-service: [redis]
          mq-service: [rabbitmq]
          search-service: [elasticsearch7]

          include:
          - search-service: elasticsearch7
            SEARCH_EXTRAS: "elasticsearch7"

    env:
      SEARCH: ${{ matrix.search-service }}
      EXTRAS: all,${{ matrix.SEARCH_EXTRAS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Generate dependencies
        run: |
          python -m pip install --upgrade pip setuptools py wheel requirements-builder
          requirements-builder -e "$EXTRAS" --level=${{ matrix.requirements-level }} setup.py > .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install -r .${{matrix.requirements-level}}-${{ matrix.python-version }}-requirements.txt
          pip install ".[$EXTRAS]"
          pip freeze
          docker --version
          docker-compose --version

      - name: Run tests
        run: |
          ./run-tests.sh
